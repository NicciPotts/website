slice_min(Time, n=1)
ggplot() +
geom_point(data = female_ultra, aes(x= Time, y= event))
ultra_all %>%
filter(Gender == 'W') %>%
group_by(race_year_id) %>%
slice_min(Time, n=1) %>%
ungroup() %>%
group_by(country)
ultra_all %>%
filter(Gender == 'W') %>%
group_by(country) %>%
slice_min(Time, n=1)
ultra_all %>%
filter(Gender == 'W') %>%
group_by(Nationality) %>%
slice_min(Time, n=1)
female_ultra <-
ultra_all %>%
filter(Gender == 'W') %>%
group_by(Nationality) %>%
slice_min(Time, n=1)
ggplot() +
geom_point(data = female_ultra, aes(x= Time, y= event))
male_ultra <-
ultra_all %>%
filter(Gender == 'M',
!is.na(Time)) %>%
group_by(Nationality) %>%
slice_min(Time, n=1)
ggplot() +
geom_point(data = female_ultra, aes(x= Time, y= event),
color= 'pink') +
geom_point(data = male_ultra, aes(x= Time, y= event),
color= 'blue')
ultra_all
ultra_all %>%
filter(Gender == 'W') %>%
group_by(year) %>%
slice_min(Time, n=1)
male_ultra <-
ultra_all %>%
filter(Gender == 'M') %>%
group_by(year) %>%
slice_min(Time, n=1)
female_ultra <-
ultra_all %>%
filter(Gender == 'W') %>%
group_by(year) %>%
slice_min(Time, n=1)
ggplot() +
geom_point(data = female_ultra, aes(x= Time, y= event),
color= 'pink') +
geom_point(data = male_ultra, aes(x= Time, y= event),
color= 'blue')
ultra_all
install.packages("rmarkdown")
install.packages("xaringan")
install.packages("xaringanthemer")
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
library(tidyverse)
library(ggalt)
library(showtext)
library(ggridges)
library(paletteer)
library(PNWColors)
library(ggtext)
showtext_auto()
font_add_google('Yaldevi', 'yaldevi')
font_add_google('PT Sans', 'ptsans')
T8Q18
df_T8Q18 %>%
group_by(Year, Activity) %>%
filter(!Activity %in% c('Base', 'Any sport incl. walking',
'Any sport excl. walking', 'None'),
Council == 'Scotland') %>%
mutate(Q1 = as.numeric(`1 - 20% most deprived`),
Q5 = as.numeric(`5 - 20% least deprived`))
df_T8Q18 %>%
group_by(Year, Activity) %>%
filter(!Activity %in% c('Base', 'Any sport incl. walking',
'Any sport excl. walking', 'None'),
Council == 'Scotland') %>%
mutate(Q1 = as.numeric(`1 - 20% most deprived`),
Q5 = as.numeric(`5 - 20% least deprived`)) %>%
mutate(propdiff = Q5-Q1/Q5*100) %>%
filter(Year %in% c(2013, 2019))
df_T8Q18 %>%
group_by(Year, Activity) %>%
filter(!Activity %in% c('Base', 'Any sport incl. walking',
'Any sport excl. walking', 'None'),
Council == 'Scotland') %>%
mutate(Q1 = as.numeric(`1 - 20% most deprived`),
Q5 = as.numeric(`5 - 20% least deprived`)) %>%
filter(Year == '2019')
df_T8Q18 %>%
group_by(Year, Activity) %>%
filter(Activity %in% c('Base', 'Any sport incl. walking',
'Any sport excl. walking', 'None'),
Council == 'Scotland') %>%
mutate(Q1 = as.numeric(`1 - 20% most deprived`),
Q5 = as.numeric(`5 - 20% least deprived`)) %>%
filter(Year == '2019')
T8Q3
T8Q3 %>%
group_by(Year, Activity) %>%
filter(Activity %in% c('Base', 'Any sport incl. walking',
'Any sport excl. walking', 'None'),
Council == 'Scotland')
T8Q3 %>%
filter(X4 %in% c('Base', 'Any sport incl. walking',
'Any sport excl. walking', 'None'),
Council == 'Scotland')
library(tidyverse)
library(janitor)
library(sf)
library(rmapshaper)
library(tmap)
library(showtext)
library(cartogram)
library(maptools)
library(paletteer)
library(viridis)
#Custom font loading
font_add_google('Poiret One', 'poiret')
showtext_auto()
#UK police force boundaries
PoliceLayer <- st_read("Police_Force_Areas_December_2016_EW_BFC_v2.shp",
layer= "Police_Force_Areas_December_2016_EW_BFC_v2") #import data
PoliceLayer <- st_transform(PoliceLayer, "+init=epsg:4326") # convert to coordinate system
SimplePolice <- ms_simplify(PoliceLayer) #simplifying shape for quicker loading/rendering
#renaming column with grography in to match data
SimplePolice <-
SimplePolice %>% rename("geography" = PFA16NM)
#Importing police diversity data - table 2
UK_Police_Diversity_Data <- readxl::read_excel("UK_Police_Diversity_Data.xlsx",
sheet = "Table 2 - ethnicity-and-area-po",
na = "N/A",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "text", "text", "numeric"))
#cleaning names
UK_Police_Diversity_Data <-
UK_Police_Diversity_Data %>%
clean_names()
#Finding out geography names to remove all and BTP that aren't physical places
# DF1 <-
#   UK_Police_Diversity_Data %>%
#   distinct(geography, .keep_all = TRUE)
#
#
# view(DF1)
#removing geographies without physical locations
DF1_regions <-
UK_Police_Diversity_Data %>%
filter(!geography %in%
c('All - excluding BTP', 'British Transport Police')) %>%
mutate(geography = str_replace(geography, "&", "and"))
#Bringing together populations
DF1_pop <-
DF1_regions %>%
rename(
"Asian" = percent_asian_population,
"Black" = percent_black_population,
"Mixed" = percent_mixed_race_population,
"Other" = percent_other_inc_chinese_population,
"White" = percent_white_population
) %>%
gather(Asian,
Black,
Mixed,
Other,
White,
key = 'ethnicity',
value = 'population') %>%
select(geography, ethnicity, population)
#Bringing together police officers
DF1_police <-
DF1_regions %>%
rename(
"Asian" = percent_of_asian_police_officers,
"Black" = percent_of_black_police_officers,
"Mixed" = percent_of_mixed_race_police_officers,
"Other" = percent_of_other_inc_chinese_police_officers,
"White" = percent_of_white_police_officers
) %>%
gather(Asian,
Black,
Mixed,
Other,
White,
key = 'ethnicity',
value = 'police') %>%
select(geography, ethnicity, police)
DF1_num <-
DF1_regions %>%
rename(
"Asian" = number_of_asian_police_officers_fte,
"Black" = number_of_black_police_officers_fte,
"Mixed" = number_of_mixed_race_police_officers_fte,
"Other" = number_of_other_inc_chinese_police_officers_fte,
"White" = number_of_white_police_officers_fte
) %>%
gather(Asian,
Black,
Mixed,
Other,
White,
key = 'ethnicity',
value = 'number') %>%
select(geography, ethnicity, number)
DF1_ethniciity <-
merge(DF1_pop, DF1_police,
by = c('geography', 'ethnicity'))
#Building ratio of police to population
DF1_ethniciity_ratio <-
DF1_ethniciity %>%
mutate(ratio = round(police / population, 2)) %>%
arrange(desc(ratio))
DF2_ethniciity_ratio <-
DF1_ethniciity_ratio %>%
filter(ratio <1.5) # filtering out police forces where the police officer number is so small it is skewing outliers
DF1_ethniciity <-
merge(DF1_pop, DF1_police,
by = c('geography', 'ethnicity'))
setwd("~/libraries")
font_add_google('Poiret One', 'poiret')
showtext_auto()
#UK police force boundaries
PoliceLayer <- st_read("Police_Force_Areas_December_2016_EW_BFC_v2.shp",
layer= "Police_Force_Areas_December_2016_EW_BFC_v2") #import data
PoliceLayer <- st_transform(PoliceLayer, "+init=epsg:4326") # convert to coordinate system
SimplePolice <- ms_simplify(PoliceLayer) #simplifying shape for quicker loading/rendering
#renaming column with grography in to match data
SimplePolice <-
SimplePolice %>% rename("geography" = PFA16NM)
#Importing police diversity data - table 2
UK_Police_Diversity_Data <- readxl::read_excel("UK_Police_Diversity_Data.xlsx",
sheet = "Table 2 - ethnicity-and-area-po",
na = "N/A",
col_types = c("text", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "text", "text", "numeric"))
#cleaning names
UK_Police_Diversity_Data <-
UK_Police_Diversity_Data %>%
clean_names()
#Finding out geography names to remove all and BTP that aren't physical places
# DF1 <-
#   UK_Police_Diversity_Data %>%
#   distinct(geography, .keep_all = TRUE)
#
#
# view(DF1)
#removing geographies without physical locations
DF1_regions <-
UK_Police_Diversity_Data %>%
filter(!geography %in%
c('All - excluding BTP', 'British Transport Police')) %>%
mutate(geography = str_replace(geography, "&", "and"))
#Bringing together populations
DF1_pop <-
DF1_regions %>%
rename(
"Asian" = percent_asian_population,
"Black" = percent_black_population,
"Mixed" = percent_mixed_race_population,
"Other" = percent_other_inc_chinese_population,
"White" = percent_white_population
) %>%
gather(Asian,
Black,
Mixed,
Other,
White,
key = 'ethnicity',
value = 'population') %>%
select(geography, ethnicity, population)
#Bringing together police officers
DF1_police <-
DF1_regions %>%
rename(
"Asian" = percent_of_asian_police_officers,
"Black" = percent_of_black_police_officers,
"Mixed" = percent_of_mixed_race_police_officers,
"Other" = percent_of_other_inc_chinese_police_officers,
"White" = percent_of_white_police_officers
) %>%
gather(Asian,
Black,
Mixed,
Other,
White,
key = 'ethnicity',
value = 'police') %>%
select(geography, ethnicity, police)
DF1_num <-
DF1_regions %>%
rename(
"Asian" = number_of_asian_police_officers_fte,
"Black" = number_of_black_police_officers_fte,
"Mixed" = number_of_mixed_race_police_officers_fte,
"Other" = number_of_other_inc_chinese_police_officers_fte,
"White" = number_of_white_police_officers_fte
) %>%
gather(Asian,
Black,
Mixed,
Other,
White,
key = 'ethnicity',
value = 'number') %>%
select(geography, ethnicity, number)
#Merging population and police numbers
DF1_ethniciity <-
merge(DF1_pop, DF1_police,
by = c('geography', 'ethnicity'))
#Building ratio of police to population
DF1_ethniciity_ratio <-
DF1_ethniciity %>%
mutate(ratio = round(police / population, 2)) %>%
arrange(desc(ratio))
DF1_ethniciity_ratio
DF1_police %>%
left_join(DF1_pop, by = c('geography', 'ethnicity')) %>%
left_join(DF1_num, by = c('geography', 'ethnicity')) %>%
mutate(ratio = round(police/population,2))
F2_ethniciity <-
DF1_police %>%
left_join(DF1_pop, by = c('geography', 'ethnicity')) %>%
left_join(DF1_num, by = c('geography', 'ethnicity')) %>%
mutate(ratio = round(police/population,2))
ggplot(DF2_ethniciity, aes(x= ethnicity, y= geography, fill= ratio)) +
geom_tile() +
scale_fill_viridis(discrete=FALSE) +
scale_x_discrete(expand= c(0,0))+
labs(x= NULL,
y= NULL,
title = "How are different ethnic groups represented in UK police forces?",
subtitle = "The ratio of percent of police officers ethnicity over the percent
of the population with the same ethnicity, for police force areas.",
caption = "data.world | DiversityInData | @nicci_potts") +
theme_classic() +
theme(legend.position = 'bottom',
text = element_text(family = 'poiret', size = 12,
color = 'black'),
axis.text = element_text(color = 'black'),
axis.text.x = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(hjust = 1),
plot.subtitle = element_text(hjust = 1))
DF1_police %>%
left_join(DF1_pop, by = c('geography', 'ethnicity')) %>%
left_join(DF1_num, by = c('geography', 'ethnicity')) %>%
mutate(ratio = round(police/population,2))
DF2_ethniciity <-
DF1_police %>%
left_join(DF1_pop, by = c('geography', 'ethnicity')) %>%
left_join(DF1_num, by = c('geography', 'ethnicity')) %>%
mutate(ratio = round(police/population,2))
ggplot(DF2_ethniciity, aes(x= ethnicity, y= geography, fill= ratio)) +
geom_tile() +
scale_fill_viridis(discrete=FALSE) +
scale_x_discrete(expand= c(0,0))+
labs(x= NULL,
y= NULL,
title = "How are different ethnic groups represented in UK police forces?",
subtitle = "The ratio of percent of police officers ethnicity over the percent
of the population with the same ethnicity, for police force areas.",
caption = "data.world | DiversityInData | @nicci_potts") +
theme_classic() +
theme(legend.position = 'bottom',
text = element_text(family = 'poiret', size = 12,
color = 'black'),
axis.text = element_text(color = 'black'),
axis.text.x = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(hjust = 1),
plot.subtitle = element_text(hjust = 1))
ggplot(DF1_ethniciity_ratio, aes(x= ethnicity, y= geography, fill= ratio)) +
geom_tile() +
scale_fill_viridis(discrete=FALSE) +
scale_x_discrete(expand= c(0,0))+
labs(x= NULL,
y= NULL,
title = "How are different ethnic groups represented in UK police forces?",
subtitle = "The ratio of percent of police officers ethnicity over the percent
of the population with the same ethnicity, for police force areas.",
caption = "data.world | DiversityInData | @nicci_potts") +
theme_classic() +
theme(legend.position = 'bottom',
text = element_text(family = 'poiret', size = 12,
color = 'black'),
axis.text = element_text(color = 'black'),
axis.text.x = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(hjust = 1),
plot.subtitle = element_text(hjust = 1))
DF1_ethniciity_ratio %>%
select(geography, ethnicity, ratio) %>%
spread(ethnicity, ratio)
Police_ratio <-
DF1_ethniciity_ratio %>%
select(geography, ethnicity, ratio) %>%
spread(ethnicity, ratio)
Police_ratio %>%
filter_all(<0.4)
Police_ratio
Police_ratio %>%
arrange(Asian)
Police_ratio %>%
arrange(Asian) %>%
mutate(Asian_rank = 1:nrow(Asian))
Police_ratio %>%
arrange(Asian) %>%
mutate(rank = 1:nrow(Asian))
Police_ratio %>%
arrange(Asian) %>%
mutate(rank = 1:nrow(Police_ratio))
Police_ratio %>%
arrange(Asian) %>%
mutate(Asian_rank = 1:nrow(Police_ratio))
Police_ratio %>%
arrange(Asian) %>%
mutate(Asian_rank = 1:nrow(Police_ratio))
Police_ratio %>%
arrange(Asian) %>%
mutate(Asian_rank = 1:nrow(Police_ratio)) %>%
arrange(Black) %>%
mutate(Black_rank = 1:nrow(Police_ratio))
Police_ratio %>%
arrange(Asian) %>%
mutate(Asian_rank = 1:nrow(Police_ratio)) %>%
arrange(Black) %>%
mutate(Black_rank = 1:nrow(Police_ratio)) %>%
arrange(Other) %>%
mutate(Other_rank = 1:nrow(Police_ratio)) %>%
arrange(Mixed) %>%
mutate(Mixed_rank = 1:nrow(Police_ratio))
Police_ratio %>%
arrange(Asian) %>%
mutate(Asian_rank = 1:nrow(Police_ratio)) %>%
arrange(Black) %>%
mutate(Black_rank = 1:nrow(Police_ratio)) %>%
arrange(Other) %>%
mutate(Other_rank = 1:nrow(Police_ratio)) %>%
arrange(Mixed) %>%
mutate(Mixed_rank = 1:nrow(Police_ratio)) %>%
mutate(All = Asian_rank, Black_rank, Other_rank, Mixed_rank)
Police_ratio %>%
arrange(Asian) %>%
mutate(Asian_rank = 1:nrow(Police_ratio)) %>%
arrange(Black) %>%
mutate(Black_rank = 1:nrow(Police_ratio)) %>%
arrange(Other) %>%
mutate(Other_rank = 1:nrow(Police_ratio)) %>%
arrange(Mixed) %>%
mutate(Mixed_rank = 1:nrow(Police_ratio)) %>%
mutate(All = Asian_rank, Black_rank, Other_rank, Mixed_rank) %>%
arrange(All)
Police_ratio %>%
arrange(Asian) %>%
mutate(Asian_rank = 1:nrow(Police_ratio)) %>%
arrange(Black) %>%
mutate(Black_rank = 1:nrow(Police_ratio)) %>%
arrange(Other) %>%
mutate(Other_rank = 1:nrow(Police_ratio)) %>%
arrange(Mixed) %>%
mutate(Mixed_rank = 1:nrow(Police_ratio)) %>%
mutate(All = Asian_rank + Black_rank + Other_rank + Mixed_rank) %>%
arrange(All)
DF3_ethnicity_rank <-
Police_ratio %>%
arrange(Asian) %>%
mutate(Asian_rank = 1:nrow(Police_ratio)) %>%
arrange(Black) %>%
mutate(Black_rank = 1:nrow(Police_ratio)) %>%
arrange(Other) %>%
mutate(Other_rank = 1:nrow(Police_ratio)) %>%
arrange(Mixed) %>%
mutate(Mixed_rank = 1:nrow(Police_ratio)) %>%
gather(Asian_rank, Black_rank, Other_rank, Mixed_rank,
key= 'ethnicity', value= 'rank')
ggplot(DF3_ethnicity_rank, aes(x= ethnicity, y= geography, fill= rank)) +
geom_tile() +
scale_fill_viridis(discrete=FALSE) +
scale_x_discrete(expand= c(0,0))+
labs(x= NULL,
y= NULL,
title = "How are different ethnic groups represented in UK police forces?",
subtitle = "The ratio of percent of police officers ethnicity over the percent
of the population with the same ethnicity, for police force areas.",
caption = "data.world | DiversityInData | @nicci_potts") +
theme_classic() +
theme(legend.position = 'bottom',
text = element_text(family = 'poiret', size = 12,
color = 'black'),
axis.text = element_text(color = 'black'),
axis.text.x = element_text(size = 12),
axis.title = element_text(size = 14),
plot.title = element_text(hjust = 1),
plot.subtitle = element_text(hjust = 1))
blogdown:::serve_site()
setwd("~/website/nicci_potts")
blogdown:::serve_site()
